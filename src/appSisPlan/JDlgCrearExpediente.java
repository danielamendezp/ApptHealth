/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package appSisPlan;

import java.text.ParseException;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import sisPlanBLL.ExpedienteMedicoBLL;
import sisPlanBLL.PacienteBLL;
import sisPlanBLL.UsuarioBLL;
import sisPlanEntidades.ExpedienteMedico;
import sisPlanEntidades.Paciente;

/**
 *
 * @author Daniela Fabiola
 */
public class JDlgCrearExpediente extends javax.swing.JDialog {
PacienteBLL paciente= new PacienteBLL();
ExpedienteMedicoBLL expediente= new ExpedienteMedicoBLL();
    /**
     * Creates new form JDlgCrearExpediente
     */
    public JDlgCrearExpediente(java.awt.Frame parent, boolean modal) throws ParseException {
        super(parent, modal);
        initComponents();
        cargarPaciente();
    }
    
/**
 * Carga la lista de pacientes en un componente gráfico de lista.
 * @throws ParseException Si ocurre un error al analizar fechas.
 */
    public void cargarPaciente() throws ParseException {
        List<Paciente> listaCategoria = paciente.getListaPacientes();  // Obtener la lista de pacientes desde algún origen
        DefaultListModel<Paciente> modeloPacientes = new DefaultListModel<>();  // Crear un modelo para la lista de pacientes

        // Agregar cada paciente al modelo
        for (Paciente paciente : listaCategoria) {
            modeloPacientes.addElement(paciente);
        }

        // Crear un componente JList con el modelo de pacientes
        JList<Paciente> jLstCategoria = new JList<>(modeloPacientes);

        // Establecer el modelo de pacientes en el componente JList de pacientes
        jLstPacientes.setModel(jLstCategoria.getModel());
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtCedula = new javax.swing.JTextField();
        jBtnCrearExpediente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLstPacientes = new javax.swing.JList<>();
        jTxtNumExpediente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jTxtCedula.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTxtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtCedulaActionPerformed(evt);
            }
        });
        jTxtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxtCedulaKeyPressed(evt);
            }
        });

        jBtnCrearExpediente.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBtnCrearExpediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/agregar-usuario_1.png"))); // NOI18N
        jBtnCrearExpediente.setText("Crear Expediente");
        jBtnCrearExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCrearExpedienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Número de Cédula");

        jLstPacientes.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(jLstPacientes);

        jTxtNumExpediente.setEditable(false);
        jTxtNumExpediente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Número de Expediente");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/salida.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTxtNumExpediente)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnCrearExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtNumExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtnCrearExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnCrearExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCrearExpedienteActionPerformed
        ExpedienteMedicoBLL expedienteMedicoBLL = new ExpedienteMedicoBLL();  // Instancia de la clase ExpedienteMedicoBLL para interactuar con la lógica de negocio de expedientes médicos
        ExpedienteMedico oExpediente = null;

        try {
            oExpediente = expedienteMedicoBLL.buscarExpedienteMedicoPorCedula(jLstPacientes.getSelectedValue().getCedula());  // Buscar expediente médico por cédula
        } catch (ParseException ex) {
            Logger.getLogger(JDlgCrearExpediente.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Mostrar el número de expediente médico consecutivo
        jTxtNumExpediente.setText(String.valueOf(expedienteMedicoBLL.consecutivoExpedienteMedico()));

        if (oExpediente == null) {
            // Verificar si se ha ingresado un número de expediente
            if (jTxtNumExpediente.getText().length() > 0) {
                // Obtener la fecha y hora actual del sistema como LocalDateTime
                LocalDateTime fechaHoraActual = LocalDateTime.now();
                // Convertir LocalDateTime a Instant
                Instant instant = fechaHoraActual.atZone(ZoneId.systemDefault()).toInstant();
                // Crear un objeto Date a partir del Instant
                Date date = Date.from(instant);

                UsuarioBLL usuario = new UsuarioBLL();  // Instancia de la clase UsuarioBLL para interactuar con la lógica de negocio de usuarios
                PacienteBLL paciente = new PacienteBLL();  // Instancia de la clase PacienteBLL para interactuar con la lógica de negocio de pacientes

                // Crear un nuevo objeto ExpedienteMedico con los datos ingresados
                ExpedienteMedico oExpedienteMedico = new ExpedienteMedico(
                    Integer.parseInt(jTxtNumExpediente.getText()),
                    date,
                    usuario.buscarUsuarioUltimoIngreso(),
                    paciente.buscarPaciente(this.jLstPacientes.getSelectedValue().getCedula())
                );

                expediente.agregarExpedienteMedico(oExpedienteMedico);  // Agregar el expediente médico a algún origen de datos
                dispose();  // Cerrar la ventana de creación de expediente
            } else {
                JOptionPane.showMessageDialog(null, "Asegúrese de ingresar al Paciente");  // Mostrar mensaje de advertencia si no se ha ingresado un número de expediente
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ya existe un expediente para esa persona");  // Mostrar mensaje de advertencia si ya existe un expediente médico
        }

    }//GEN-LAST:event_jBtnCrearExpedienteActionPerformed

    private void jTxtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtCedulaActionPerformed
        // Verificar si la longitud de la cédula es igual a 9 caracteres
        if (jTxtCedula.getText().length() == 9) {
            // Buscar el paciente según la cédula ingresada
            Paciente obtenerPaciente = paciente.buscarPaciente(jTxtCedula.getText());

            // Obtener y mostrar el número de expediente médico consecutivo
            jTxtNumExpediente.setText(String.valueOf(expediente.consecutivoExpedienteMedico()));
            for (int i = 0; i < jLstPacientes.getModel().getSize(); i++) {
                if(jLstPacientes.equals(obtenerPaciente)){
                    jLstPacientes.setSelectedIndex(i);// Seleccionar el valor correspondiente en la lista
                    jLstPacientes.ensureIndexIsVisible(i); // Asegurarse de que el índice seleccionado sea visible en la lista
                    break;
                }
            }
        }
    }//GEN-LAST:event_jTxtCedulaActionPerformed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
      dispose();
    }//GEN-LAST:event_jLabel9MousePressed

    private void jTxtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtCedulaKeyPressed
         // Verificar si la longitud de la cédula es igual a 9 caracteres
        if (jTxtCedula.getText().length() == 9) {
            // Buscar el paciente según la cédula ingresada
            Paciente obtenerPaciente = paciente.buscarPaciente(jTxtCedula.getText());

            // Obtener y mostrar el número de expediente médico consecutivo
            jTxtNumExpediente.setText(String.valueOf(expediente.consecutivoExpedienteMedico()));
            int indexPaciente = -1;
            DefaultListModel<Paciente> model = (DefaultListModel<Paciente>) jLstPacientes.getModel();
            int size = model.getSize();
            String numPacienteBuscado = jTxtCedula.getText();
            for (int i = 0; i < size; i++) {
                Paciente PacienteEnLista = model.getElementAt(i);
                if (String.valueOf(PacienteEnLista.getCedula()).equals(numPacienteBuscado)) {
                    indexPaciente = i;
                    break;
                }
            }
            
            if (indexPaciente != -1) {
                jLstPacientes.setSelectedIndex(indexPaciente);
                jLstPacientes.ensureIndexIsVisible(indexPaciente);
            }
        }
        
            
       
    }//GEN-LAST:event_jTxtCedulaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDlgCrearExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDlgCrearExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDlgCrearExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDlgCrearExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDlgCrearExpediente dialog = null;
                try {
                    dialog = new JDlgCrearExpediente(new javax.swing.JFrame(), true);
                } catch (ParseException ex) {
                    Logger.getLogger(JDlgCrearExpediente.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCrearExpediente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<Paciente> jLstPacientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTxtCedula;
    private javax.swing.JTextField jTxtNumExpediente;
    // End of variables declaration//GEN-END:variables
}
