/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package appSisPlan;

import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import sisPlanBLL.CitaBLL;
import sisPlanBLL.DoctorBLL;
import sisPlanBLL.PacienteBLL;
import sisPlanEntidades.Cita;
import sisPlanUtilitario.Pila;
import sisPlanUtilitario.PilaCita;

/**
 *
 * @author Daniela Fabiola
 */
public class jDlgCitaPaciente extends javax.swing.JDialog {
     CitaBLL accionCita= new CitaBLL();
    DoctorBLL Doctor= new DoctorBLL();
    PacienteBLL paciente= new PacienteBLL();
    
    /**
     * Creates new form jDlgCitaPaciente
     */
    public jDlgCitaPaciente(java.awt.Frame parent, boolean modal) throws ParseException {
        super(parent, modal);
        initComponents();
    }
 /**
 * Carga las citas médicas asociadas a un paciente según su número de cédula.
 */   
    public void cargarCita() throws ParseException{
        
        List<Cita> listaCita=accionCita.getListaCitasCedula(jTxtCedula.getText());
        DefaultListModel<Cita> modeloPacientees = new DefaultListModel<>();
        for(Cita categoria: listaCita){
            modeloPacientees.addElement(categoria);
        }
        
        JList<Cita> jLstCategoria = new JList<>(modeloPacientees);
        jLstCitaMedica.setModel(jLstCategoria.getModel());
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLstCitaMedica = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jTxtCedula = new javax.swing.JTextField();
        jBtoModificar = new javax.swing.JButton();
        jBtoEliminar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jLstCitaMedica);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Número de Cédula");

        jTxtCedula.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTxtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxtCedulaKeyPressed(evt);
            }
        });

        jBtoModificar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBtoModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/editar.png"))); // NOI18N
        jBtoModificar.setText("Modificar");
        jBtoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtoModificarActionPerformed(evt);
            }
        });

        jBtoEliminar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBtoEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Eliminar.png"))); // NOI18N
        jBtoEliminar.setText("Eliminar");
        jBtoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtoEliminarActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/salida.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jBtoModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtoModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtoModificarActionPerformed
      PacienteBLL paciente=new PacienteBLL();
      paciente.buscarPaciente(jTxtCedula.getText());
        if(paciente.buscarPaciente(jTxtCedula.getText())!=null){
            if(jLstCitaMedica.getSelectedIndex()>=0){
                    Cita oCita= accionCita.buscarCita(String.valueOf(jLstCitaMedica.getSelectedValue().getCodigo()));
                    PilaCita.agregarElemento(String.valueOf(oCita.getCodigo()));
                    JFrmCitaMedica cita = null;
                     try {
                         cita = new JFrmCitaMedica();
                     } catch (ParseException ex) {
                         Logger.getLogger(jDlgCitaPaciente.class.getName()).log(Level.SEVERE, null, ex);
                     }
                    cita.setVisible(true);
                    dispose();
                    JOptionPane.showMessageDialog(null, "Seleccione los datos y confirme presionando de nuevo el botón");
               }else{
                    JOptionPane.showMessageDialog(null, "Seleccione la cita");
               }
      }  else{
            JOptionPane.showMessageDialog(null, "No existe la persona");
      }
    }//GEN-LAST:event_jBtoModificarActionPerformed

    private void jBtoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtoEliminarActionPerformed
       
     
      PacienteBLL paciente=new PacienteBLL();
      paciente.buscarPaciente(jTxtCedula.getText());
        if(paciente.buscarPaciente(jTxtCedula.getText())!=null){
             int confirmacion=JOptionPane.showInternalConfirmDialog(null, "¿Seguro que desea eliminarlo?");
                if(confirmacion==0){
                    if(jLstCitaMedica.getSelectedIndex()>=0){
                   Cita oCita= accionCita.buscarCita(String.valueOf(jLstCitaMedica.getSelectedValue().getCodigo()));
                    if(accionCita.existeCita(String.valueOf(oCita.getCodigo()))&&oCita!=null){
                        Cita cita = null;
                        accionCita.eliminarCita(String.valueOf(oCita.getCodigo()));
                    }else{
                        JOptionPane.showMessageDialog(null, "No se encontro la cita");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Seleccione la cita");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existe la persona");
        }
            
    }//GEN-LAST:event_jBtoEliminarActionPerformed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        JFrmCitaMedica cita = null;
         try {
             cita = new JFrmCitaMedica();
             cita.setVisible(true);
         } catch (ParseException ex) {
             Logger.getLogger(jDlgCitaPaciente.class.getName()).log(Level.SEVERE, null, ex);
         }
        this.setVisible(false);
    }//GEN-LAST:event_jLabel9MousePressed

    private void jTxtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtCedulaKeyPressed
        if(jTxtCedula.getText().length()==9){
            try {
                cargarCita();
            } catch (ParseException ex) {
                Logger.getLogger(jDlgCitaPaciente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTxtCedulaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jDlgCitaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jDlgCitaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jDlgCitaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jDlgCitaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jDlgCitaPaciente dialog = null;
                try {
                    dialog = new jDlgCitaPaciente(new javax.swing.JFrame(), true);
                } catch (ParseException ex) {
                    Logger.getLogger(jDlgCitaPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtoEliminar;
    private javax.swing.JButton jBtoModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<Cita> jLstCitaMedica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTxtCedula;
    // End of variables declaration//GEN-END:variables
}
