/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package appSisPlan;

import java.awt.Color;
import java.text.ParseException;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import sisPlanBLL.ExpedienteMedicoBLL;
import sisPlanBLL.PacienteBLL;
import sisPlanBLL.UsuarioBLL;
import sisPlanEntidades.Usuario;
import sisPlanEntidades.ERolUsuario;

/**
 *
 * @author Daniela Fabiola
 */
public class JDlgActualizarUsuario extends javax.swing.JDialog {
PacienteBLL paciente= new PacienteBLL();
ExpedienteMedicoBLL expediente= new ExpedienteMedicoBLL();
    /**
     * Creates new form JDlgCrearExpediente
     */
    public JDlgActualizarUsuario(java.awt.Frame parent, boolean modal) throws ParseException {
        super(parent, modal);
        initComponents();
        cargarRolUsuario();
        jLblAdvertencias.setText("Minimo 6 caractéres, incluir simbolos, numeros y mayúsculas");
    }
    
    public void cargarRolUsuario(){
         // Agregar los roles de usuario al JComboBox
        jCboRolUsuario.addItem(ERolUsuario.ADMINISTRADOR);
        jCboRolUsuario.addItem(ERolUsuario.CITAS);
        jCboRolUsuario.addItem(ERolUsuario.DOCTOR);
        jCboRolUsuario.addItem(ERolUsuario.MANTENIMIENTO);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtUsuario = new javax.swing.JTextField();
        jBtnActualizar = new javax.swing.JButton();
        jPswContrasena1 = new javax.swing.JPasswordField();
        jPswContrasena2 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCboRolUsuario = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTxtNombreUsuario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLblAdvertencias = new javax.swing.JLabel();
        jLblAdvertencias1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jTxtUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTxtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtUsuarioActionPerformed(evt);
            }
        });

        jBtnActualizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jBtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/agregar-usuario_1.png"))); // NOI18N
        jBtnActualizar.setText("Actualizar Usuario");
        jBtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarActionPerformed(evt);
            }
        });

        jPswContrasena1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jPswContrasena2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jPswContrasena2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPswContrasena2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Contraseña");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Verifique Contraseña");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Usuario");

        jCboRolUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Rol Usuario");

        jTxtNombreUsuario.setEditable(false);
        jTxtNombreUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Nombre Usuario");

        jLblAdvertencias.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLblAdvertencias.setForeground(new java.awt.Color(255, 0, 0));

        jLblAdvertencias1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLblAdvertencias1.setForeground(new java.awt.Color(204, 0, 0));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/salida.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/usuario (4).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPswContrasena2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPswContrasena1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLblAdvertencias, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jCboRolUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLblAdvertencias1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTxtNombreUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(239, 239, 239)
                                .addComponent(jLabel6)))
                        .addGap(0, 50, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(237, 237, 237)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel3)
                                        .addGap(62, 62, 62)
                                        .addComponent(jLabel1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jCboRolUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTxtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jTxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLblAdvertencias1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jPswContrasena1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLblAdvertencias, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jPswContrasena2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jBtnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarActionPerformed
        UsuarioBLL usuario = new UsuarioBLL();  // Instancia de la clase UsuarioBLL para interactuar con la lógica de negocio de usuario

        // Obtener la fecha y hora actual del sistema como LocalDateTime
        LocalDateTime fechaHoraActual = LocalDateTime.now();

        // Convertir LocalDateTime a Instant
        Instant instant = fechaHoraActual.atZone(ZoneId.systemDefault()).toInstant();

        // Crear un objeto Date a partir del Instant
        Date date = Date.from(instant);

        char[] password1 = jPswContrasena1.getPassword();  // Obtener la contraseña ingresada en el primer campo
        char[] password2 = jPswContrasena2.getPassword();  // Obtener la contraseña ingresada en el segundo campo

        if (Arrays.equals(password1, password2)) {  // Verificar si las contraseñas ingresadas coinciden
            ERolUsuario rol = (ERolUsuario) this.jCboRolUsuario.getSelectedItem();  // Obtener el rol de usuario seleccionado

            Usuario oUsuario = null;  // Variable para almacenar el usuario encontrado
            Usuario actualizar = null;  // Variable para almacenar los datos actualizados del usuario

            try {
                oUsuario = usuario.buscarUsuarioUserName(jTxtUsuario.getText());  // Buscar el usuario por nombre de usuario
                actualizar = new Usuario(oUsuario.getCodigo(), jTxtUsuario.getText(), oUsuario.getNombreUsuario(), new String(password1), rol, "Activo", date);  // Crear un nuevo objeto Usuario con los datos actualizados
            } catch (ParseException ex) {
                Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

            usuario.modificarUsuario(actualizar);  // Llamar al método para modificar el usuario con los nuevos datos
            JOptionPane.showMessageDialog(null, "¡Actualización Exitosa!");  // Mostrar mensaje de éxito
            dispose();  // Cerrar la ventana de actualización
        } else {
            JOptionPane.showMessageDialog(null, "Hay datos erróneos o no disponibles");  // Mostrar mensaje de error si las contraseñas no coinciden
        }

    }//GEN-LAST:event_jBtnActualizarActionPerformed
/**
 * Acción realizada cuando se ingresa texto en el campo de usuario.
 * Se busca el usuario cuyo nombre coincida con el texto ingresado y se actualizan campos relacionados.
 */
    private void jTxtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtUsuarioActionPerformed
       // Verificar si la longitud del texto ingresado es mayor que 5
        if (jTxtUsuario.getText().length() > 5) {
            UsuarioBLL usuario = new UsuarioBLL();  // Instancia de la clase UsuarioBLL para interactuar con la lógica de negocio de usuario
            Usuario user = null;  // Variable para almacenar el usuario encontrado

            try {
                // Buscar el usuario por nombre de usuario
                user = usuario.buscarUsuarioUserName(jTxtUsuario.getText());
            } catch (ParseException ex) {
                Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Actualizar el campo de nombre de usuario con el nombre encontrado
            jTxtNombreUsuario.setText(user.getNombreUsuario());

            // Establecer el rol de usuario en el JComboBox según el nivel del usuario encontrado
            jCboRolUsuario.setSelectedItem((ERolUsuario) ERolUsuario.buscsarNivel(user.getRolUsuario().getCodigo()));
        }
    }//GEN-LAST:event_jTxtUsuarioActionPerformed
        /**
        * Verifica si la contraseña contiene al menos una letra mayúscula.
        *
        * @param password Contraseña a verificar.
        * @return `true` si contiene al menos una letra mayúscula, de lo contrario, `false`.
        */
       private boolean contieneMayusculas(char[] password) {
           for (char c : password) {
               if (Character.isUpperCase(c)) {
                   return true;
               }
           }
           return false;
       }

       /**
        * Verifica si la contraseña contiene al menos un número.
        *
        * @param password Contraseña a verificar.
        * @return `true` si contiene al menos un número, de lo contrario, `false`.
        */
       private boolean contieneNumeros(char[] password) {
           for (char c : password) {
               if (Character.isDigit(c)) {
                   return true;
               }
           }
           return false;
       }

       /**
        * Verifica si la contraseña contiene al menos un carácter especial.
        *
        * @param password Contraseña a verificar.
        * @return `true` si contiene al menos un carácter especial, de lo contrario, `false`.
        */
       private boolean contieneCaracteresEspeciales(char[] password) {
           // Define el patrón de caracteres especiales utilizando una expresión regular
           Pattern pattern = Pattern.compile("[!@#\\$%^&\\*_\\-+{}:?\\.,]");
           Matcher matcher = pattern.matcher(new String(password));
           return matcher.find();  // Devuelve true si encuentra algún carácter especial en la contraseña
       }

 /**
 * Acción realizada cuando se ingresa texto en el campo de confirmación de contraseña.
 * Se verifica la coincidencia y seguridad de la contraseña ingresada.
 */
    private void jPswContrasena2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPswContrasena2ActionPerformed
        char[] password1 = jPswContrasena1.getPassword();  // Obtener la contraseña ingresada en el primer campo
        char[] password2 = jPswContrasena2.getPassword();  // Obtener la contraseña ingresada en el segundo campo

        // Verificar si la longitud de la contraseña es mayor a 6 caracteres
        if (password2.length > 6) {
            // Verificar si la contraseña no cumple con los criterios de seguridad
            if (!contieneCaracteresEspeciales(password2) || !contieneMayusculas(password2) || !contieneNumeros(password2)) {
                jLblAdvertencias.setText("Incluir símbolos, números y mayúsculas"); 
                jLblAdvertencias.setForeground(Color.RED);
            } else {
                // Verificar si las contraseñas coinciden
                if (Arrays.equals(password1, password2)) {
                    jLblAdvertencias.setText("Las contraseñas coinciden");
                    jLblAdvertencias.setForeground(Color.GREEN);
                } else {
                    jLblAdvertencias.setText("Las contraseñas NO coinciden");
                    jLblAdvertencias.setForeground(Color.RED);
                }
            }
        } else {
            jLblAdvertencias.setText("Mínimo 6 caracteres"); 
            jLblAdvertencias.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jPswContrasena2ActionPerformed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        dispose();
    }//GEN-LAST:event_jLabel9MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDlgActualizarUsuario dialog = null;
                try {
                    dialog = new JDlgActualizarUsuario(new javax.swing.JFrame(), true);
                } catch (ParseException ex) {
                    Logger.getLogger(JDlgActualizarUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnActualizar;
    private javax.swing.JComboBox<ERolUsuario> jCboRolUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblAdvertencias;
    private javax.swing.JLabel jLblAdvertencias1;
    private javax.swing.JPasswordField jPswContrasena1;
    private javax.swing.JPasswordField jPswContrasena2;
    private javax.swing.JTextField jTxtNombreUsuario;
    private javax.swing.JTextField jTxtUsuario;
    // End of variables declaration//GEN-END:variables
}
